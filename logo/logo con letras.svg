<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:osb="http://www.openswatchbook.org/uri/2009/osb"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   width="750mm"
   height="550mm"
   viewBox="0 0 750 550"
   version="1.1"
   id="svg839"
   inkscape:version="1.0.2 (e86c870879, 2021-01-15, custom)"
   sodipodi:docname="logo_letras.svg">
  <defs
     id="defs833">
    <rect
       x="107.34524"
       y="303.1369"
       width="520.85119"
       height="210.91072"
       id="rect886" />
    <rect
       x="34.77381"
       y="77.863095"
       width="439.20833"
       height="162.52976"
       id="rect844" />
    <rect
       x="58.208333"
       y="90.714286"
       width="170.08929"
       height="101.29762"
       id="rect838" />
    <linearGradient
       id="linearGradient2777"
       osb:paint="solid">
      <stop
         style="stop-color:#d40000;stop-opacity:1;"
         offset="0"
         id="stop2775" />
    </linearGradient>
    <rect
       x="34.773811"
       y="77.863098"
       width="439.20834"
       height="162.52975"
       id="rect844-8" />
    <rect
       x="34.773811"
       y="77.863098"
       width="439.20834"
       height="162.52975"
       id="rect857" />
  </defs>
  <sodipodi:namedview
     id="base"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageopacity="0.0"
     inkscape:pageshadow="2"
     inkscape:zoom="0.35"
     inkscape:cx="1327.5751"
     inkscape:cy="1131.4286"
     inkscape:document-units="mm"
     inkscape:current-layer="layer1"
     inkscape:document-rotation="0"
     showgrid="false"
     width="298mm"
     inkscape:window-width="1904"
     inkscape:window-height="1001"
     inkscape:window-x="11"
     inkscape:window-y="20"
     inkscape:window-maximized="0" />
  <metadata
     id="metadata836">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title />
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     inkscape:label="Capa 1"
     inkscape:groupmode="layer"
     id="layer1">
    <script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
    <g
       id="g900"
       transform="matrix(0.97449903,0,0,0.99369294,-342.71509,-268.77275)">
      <path
         style="fill:#000000;stroke-width:0.09474"
         d="m 587.51583,494.25206 c 2.15828,-0.15051 4.0825,-0.71445 5.85688,-1.71571 1.03625,-0.58475 1.24041,-0.7262 2.22041,-1.53881 4.25959,-3.53191 6.18831,-9.33933 4.98929,-15.02262 -0.23788,-1.12766 -0.67413,-2.35076 -1.28903,-3.6143 -0.44978,-0.92461 -1.13098,-1.8582 -6.46458,-8.86301 -5.59323,-7.34562 -6.64671,-8.64441 -7.60906,-9.38073 -2.41231,-1.84566 -5.52938,-1.99311 -9.23503,-0.43683 -1.30598,0.54839 -3.99239,2.03152 -4.73672,2.61497 l -0.57517,0.45093 -0.10957,-0.41391 c -0.37623,-1.42614 -1.55576,-2.87956 -2.86905,-3.53575 -1.31662,-0.65803 -2.71452,-0.77698 -4.93756,-0.42025 -2.13571,0.34219 -2.69027,0.38267 -3.53375,0.2565 -0.96373,-0.14497 -1.02115,-0.23676 -0.6862,-1.10239 0.0686,-0.18233 -0.009,-0.26526 -0.70754,-0.73802 -0.43296,-0.29285 -0.80508,-0.53467 -0.82712,-0.53708 -0.0245,-0.002 -0.13724,0.19369 -0.25612,0.43639 -0.29352,0.59864 -0.41263,1.75456 -0.2337,2.27259 0.19432,0.56221 0.66237,1.1016 1.21025,1.39351 0.37869,0.20208 0.68454,0.2794 1.40244,0.3543 1.00265,0.10477 1.79869,0.0462 3.59652,-0.2653 0.64737,-0.11224 1.52213,-0.21385 1.94408,-0.22689 2.29031,-0.0688 3.89793,1.27563 4.22544,3.53348 0.0647,0.44683 0.062,0.455 -0.30472,0.80025 -0.67637,0.63717 -2.32907,2.82556 -3.04758,4.0357 -1.23531,2.08053 -1.74181,3.52396 -1.95003,5.55744 -0.16385,1.59909 -0.0515,2.72176 0.4112,4.11656 0.57149,1.72218 0.891,2.18583 6.96103,10.10211 3.3518,4.37134 5.98535,7.71765 6.33062,8.04407 1.68322,1.59141 3.69526,2.74669 5.86304,3.36651 0.9952,0.28478 3.38095,0.5455 4.36121,0.47686 z m -4.79596,-2.76671 c -1.54387,-0.59689 -2.90044,-1.45401 -4.10925,-2.59567 -0.25513,-0.24136 -1.60823,-1.92704 -3.0061,-3.74618 l -2.54163,-3.30739 1.51204,-0.60007 c 1.71599,-0.68102 3.12318,-1.39289 4.56818,-2.311 4.55983,-2.89732 8.53852,-7.00269 11.85139,-12.22894 l 0.80283,-1.26658 2.69398,3.54543 c 2.09462,2.7567 2.78812,3.74076 3.11721,4.4234 1.18135,2.4503 1.56596,4.64225 1.28625,7.33131 -0.22835,2.19648 -0.70363,3.63597 -1.80792,5.47526 -2.1106,3.51582 -5.48744,5.63803 -9.54206,5.99691 -0.49547,0.0441 -1.17426,-2.9e-4 -2.30456,-0.14937 -1.34844,-0.1807 -1.74719,-0.26754 -2.52036,-0.56711 z m -13.81298,-15.10069 c -1.28499,-1.68767 -2.3586,-3.1962 -2.55713,-3.59328 -1.75601,-3.51108 -0.99731,-7.12266 2.38407,-11.34881 1.24121,-1.55123 3.40004,-3.41426 5.08824,-4.39102 2.73763,-1.58383 4.59349,-2.308 6.2848,-2.45231 1.02754,-0.0874 1.92478,0.0777 2.87255,0.52816 1.28326,0.61067 1.73128,1.07597 4.49928,4.67357 1.40414,1.82491 2.54709,3.37465 2.53985,3.44379 -0.0175,0.16835 -1.29791,2.25332 -2.07369,3.37685 -1.96187,2.84123 -3.92643,5.02188 -6.49834,7.21299 -2.92473,2.49168 -5.73619,4.09039 -9.08639,5.16677 -0.52841,0.16967 -1.02291,0.30455 -1.09937,0.30007 -0.0763,-0.005 -1.13566,-1.31727 -2.35382,-2.91722 z m 10.0633,-4.67514 c 0.96022,-0.22141 1.67631,-0.76144 2.18916,-1.65067 0.29183,-0.50555 0.35624,-0.71292 0.42347,-1.35521 0.068,-0.6503 0.0464,-0.857 -0.14463,-1.451 -0.20157,-0.62301 -0.44774,-0.98552 -2.44326,-3.5961 -2.00024,-2.61666 -2.27855,-2.941 -2.81718,-3.28324 -0.99636,-0.63331 -2.18241,-0.67418 -3.17133,-0.10951 -1.4042,0.80158 -2.05812,2.55385 -1.5482,4.14865 0.16601,0.51929 0.52601,1.042 2.45507,3.56556 1.93863,2.53609 2.33477,3.00346 2.78158,3.28212 0.61658,0.38479 1.66142,0.59087 2.27501,0.44949 z m -1.1837,-2.15574 c -0.28165,-0.14772 -4.3279,-5.36843 -4.48746,-5.79026 -0.30685,-0.8117 0.28822,-1.79563 1.12973,-1.86814 0.61332,-0.0527 0.94511,0.28255 3.11899,3.15021 1.64021,2.16374 2.06272,2.78173 2.10675,3.08131 0.16377,1.11431 -0.90527,1.93084 -1.86801,1.42688 z"
         id="path916" />
      <path
         id="path4934"
         style="fill:#d40000;fill-opacity:1;stroke:#000000;stroke-width:2.12514;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
         d="m 578.50392,530.07331 c -13.02198,-1.22966 -22.26993,-4.53226 -31.98964,-11.42404 -2.86629,-2.03235 -8.72564,-7.59555 -10.90029,-10.34932 -6.34258,-8.03172 -10.05746,-16.53876 -11.57915,-26.51617 -0.555,-3.63906 -0.555,-11.14026 0,-14.77932 1.52169,-9.9774 5.23657,-18.48445 11.57915,-26.51615 2.19274,-2.7767 8.03977,-8.32051 10.96834,-10.39953 8.47103,-6.01368 17.44337,-9.53589 27.96648,-10.97867 3.8381,-0.52623 11.74958,-0.52623 15.5877,0 10.52313,1.44278 19.49545,4.96499 27.96649,10.97867 2.90439,2.06185 8.77187,7.61737 10.91536,10.33499 6.43691,8.16102 10.08803,16.50247 11.63461,26.58069 0.55927,3.64443 0.55927,11.13489 0,14.77932 -1.54658,10.07825 -5.1977,18.41969 -11.63461,26.58069 -2.12559,2.69494 -8.00497,8.26942 -10.84731,10.2848 -10.50161,7.44619 -21.75119,11.16694 -34.54879,11.42686 -2.30327,0.0468 -4.60652,0.0456 -5.11834,-0.002 z m 9.77532,-6.77231 c 1.27959,-0.17579 2.40505,-0.32275 2.50101,-0.32659 0.096,-0.004 0.1745,-2.54493 0.1745,-5.64682 0,-5.27082 -0.0266,-5.63181 -0.40715,-5.51744 -1.31149,0.39426 -5.52068,0.78709 -8.43363,0.78709 -2.91295,0 -7.12212,-0.39283 -8.43363,-0.78709 -0.38049,-0.11437 -0.40714,0.24662 -0.40714,5.51744 0,4.35451 0.0662,5.64422 0.29082,5.65911 0.15995,0.0106 1.1807,0.14805 2.26835,0.30542 2.74593,0.39728 9.58382,0.40217 12.44687,0.009 z m -1.69884,-16.8541 c 11.4941,-1.63646 21.06871,-8.20339 26.1583,-17.94118 2.47031,-4.72636 3.54938,-9.12469 3.54938,-14.46744 0,-5.34275 -1.07907,-9.74108 -3.54938,-14.46745 -5.08959,-9.73777 -14.6642,-16.30471 -26.1583,-17.94116 -2.15193,-0.30638 -7.29767,-0.30638 -9.44959,0 -15.42246,2.19577 -27.14058,13.30619 -29.45644,27.92883 -0.32314,2.04035 -0.32314,6.91922 0,8.95956 2.28326,14.41684 13.62611,25.36949 28.83024,27.83847 2.18574,0.35494 7.86005,0.40584 10.07579,0.0904 z m -39.9649,-3.58916 c 2.69762,-1.47583 4.9534,-2.7214 5.01285,-2.76792 0.12722,-0.0995 0.0155,-0.24991 -1.4583,-1.96296 -2.58415,-3.00361 -5.23184,-7.38359 -6.45237,-10.67391 -0.29252,-0.7886 -0.60865,-1.51772 -0.70251,-1.62027 -0.11903,-0.13007 -8.72986,4.328 -10.17067,5.26566 -0.11527,0.075 1.57877,3.70749 2.65335,5.68942 0.58004,1.06981 1.59635,2.75731 2.25848,3.74998 1.22306,1.8336 3.66284,5.00332 3.85113,5.00332 0.0568,0 2.31043,-1.20748 5.00804,-2.68332 z m 77.41649,1.02893 c 1.54405,-1.90822 3.54874,-4.94527 4.805,-7.27936 0.99918,-1.85646 2.65489,-5.43841 2.54644,-5.50897 -1.4408,-0.93766 -10.05163,-5.39573 -10.17065,-5.26566 -0.0939,0.10255 -0.41,0.83167 -0.70252,1.62027 -1.20427,3.24646 -3.90184,7.70889 -6.45249,10.67391 -1.50882,1.75396 -1.63047,1.93815 -1.35008,2.04454 0.12796,0.0486 2.37887,1.27484 5.00201,2.72507 2.62315,1.45021 4.83764,2.6137 4.92113,2.58553 0.0834,-0.0281 0.71399,-0.74607 1.40116,-1.59533 z m -80.31538,-43.79513 c 1.33246,-3.46314 3.8807,-7.67438 6.45357,-10.66523 1.47382,-1.71328 1.58539,-1.86344 1.45817,-1.96296 -0.79916,-0.62537 -10.07352,-5.45793 -10.20136,-5.3156 -1.80901,2.01437 -4.48144,5.90967 -6.03604,8.79811 -1.36047,2.52774 -2.65929,5.49471 -2.43874,5.57098 0.1037,0.0359 2.33476,1.24913 4.95791,2.69616 2.62316,1.44701 4.86025,2.60692 4.97131,2.57758 0.11108,-0.0292 0.48691,-0.7939 0.83518,-1.69904 z m 82.67345,-0.91097 c 2.71138,-1.47639 4.9584,-2.70297 4.99337,-2.72573 0.11557,-0.0752 -1.57977,-3.70926 -2.67292,-5.72957 -1.45008,-2.67996 -4.32434,-6.85638 -5.89977,-8.57256 -0.0961,-0.10465 -2.49071,1.0788 -5.32142,2.62991 l -5.14676,2.82016 0.7859,0.78919 c 3.08694,3.09986 6.10118,8.09975 7.95608,13.1972 0.0552,0.15165 0.1623,0.27574 0.23804,0.27574 0.0757,0 2.35611,-1.20795 5.06748,-2.68434 z M 576.414,435.28827 c 3.93341,-0.56188 11.56898,-0.31622 14.1336,0.45473 0.3805,0.1144 0.40715,-0.24659 0.40715,-5.51743 0,-3.1019 -0.0785,-5.64297 -0.1745,-5.6468 -0.096,-0.004 -1.22142,-0.15083 -2.50101,-0.3266 -2.99339,-0.41121 -9.33714,-0.41121 -12.33055,0 -1.27958,0.17577 -2.40503,0.32275 -2.50099,0.3266 -0.096,0.004 -0.1745,2.5449 -0.1745,5.6468 0,5.27084 0.0266,5.63183 0.40714,5.51743 0.22393,-0.0673 1.45408,-0.27194 2.73366,-0.45473 z" />
      <path
         style="fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:2.34637;stroke-miterlimit:4;stroke-dasharray:none"
         d="m 577.78649,469.55378 c -0.7177,-0.61101 -4.12768,-5.13364 -4.26133,-5.65176 -0.30384,-1.17788 0.75434,-1.98544 1.65593,-1.26373 0.77588,0.62107 4.42499,5.61432 4.42499,6.05492 0,0.45698 -0.69341,1.22588 -1.10551,1.22588 -0.15673,0 -0.47807,-0.16439 -0.71408,-0.36531 z"
         id="path926" />
    </g>
    <text
       xml:space="preserve"
       id="text836"
       style="fill:black;fill-opacity:1;line-height:1.25;stroke:none;font-family:sans-serif;font-style:normal;font-weight:normal;font-size:10.58333333px;white-space:pre;shape-inside:url(#rect838);" />
    <text
       xml:space="preserve"
       id="text842"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:125.742px;line-height:1.25;font-family:Ravie;-inkscape-font-specification:Ravie;white-space:pre;shape-inside:url(#rect844);fill:#000000;fill-opacity:1;stroke:none;"
       transform="matrix(1.3261655,0,0,1.1418889,45.999753,33.637355)"><tspan
         x="34.773438"
         y="194.79814"><tspan
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:125.742px;font-family:'Fredoka One';-inkscape-font-specification:'Fredoka One'">1   24</tspan></tspan></text>
    <text
       xml:space="preserve"
       id="text842-6"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:125.742px;line-height:1.25;font-family:Ravie;-inkscape-font-specification:Ravie;white-space:pre;shape-inside:url(#rect844-8);fill:#000000;fill-opacity:1;stroke:none;"
       transform="matrix(1.6339867,0,0,1.2879949,3.119968,149.70348)" />
    <text
       xml:space="preserve"
       id="text884"
       style="font-style:normal;font-weight:normal;font-size:139.915px;line-height:1.25;font-family:sans-serif;white-space:pre;shape-inside:url(#rect886);fill:#000000;fill-opacity:1;stroke:none;"
       transform="matrix(1.309913,0,0,1.249992,-45.385365,-160.92135)"><tspan
         x="107.3457"
         y="426.9287"><tspan
           style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:122.425px;font-family:'Fredoka One';-inkscape-font-specification:'Fredoka One'">CASINO</tspan></tspan></text>
  </g>
</svg>
